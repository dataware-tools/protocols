openapi: 3.0.2
info:
  title: permission store
  version: '1.0'
  description: Permision manage APIs
  contact:
    email: contact@hdwlab.co.jp
    name: Human Dataware Lab. Co. Ltd.
    url: 'http://www.hdwlab.co.jp/'
  license:
    name: Apache-2.0
servers:
  - url: 'http://localhost:8080'
paths:
  /users:
    get:
      summary: Get list of users
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  start:
                    type: number
                  limit:
                    type: number
                  length:
                    type: number
                  users:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        created_at:
                          type: string
                          minLength: 1
                        email:
                          type: string
                          minLength: 1
                        email_verified:
                          type: boolean
                        family_name:
                          type: string
                          minLength: 1
                        given_name:
                          type: string
                          minLength: 1
                        identities:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            type: object
                            properties:
                              provider:
                                type: string
                                minLength: 1
                              user_id:
                                type: string
                                minLength: 1
                              connection:
                                type: string
                                minLength: 1
                              isSocial:
                                type: boolean
                            required:
                              - provider
                              - user_id
                              - connection
                              - isSocial
                        locale:
                          type: string
                          minLength: 1
                        name:
                          type: string
                          minLength: 1
                        nickname:
                          type: string
                          minLength: 1
                        picture:
                          type: string
                          minLength: 1
                        updated_at:
                          type: string
                          minLength: 1
                        user_id:
                          type: string
                          minLength: 1
                        last_login:
                          type: string
                          minLength: 1
                        last_ip:
                          type: string
                          minLength: 1
                        logins_count:
                          type: number
                        app_metadata:
                          type: object
                          properties:
                            roles:
                              type: array
                              items:
                                type: object
                          required:
                            - roles
                        roles:
                          type: array
                          items:
                            type: string
                      required:
                        - created_at
                        - email
                        - email_verified
                        - family_name
                        - given_name
                        - locale
                        - name
                        - nickname
                        - picture
                        - updated_at
                        - user_id
                        - last_login
                        - last_ip
                        - logins_count
                  total:
                    type: number
                required:
                  - start
                  - limit
                  - length
                  - users
                  - total
              examples: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
      operationId: listUsers
      description: Get user list.
      parameters:
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/search'
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    patch:
      summary: Update user info.
      operationId: updateUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: Update user info.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - user
    get:
      summary: Get user
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: Get user
      tags:
        - user
  /roles:
    get:
      summary: Get list of roles
      tags:
        - role
      operationId: listRoles
      description: Get list of roles.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  total:
                    type: integer
    post:
      summary: Create role
      operationId: createRole
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      description: Create role.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
            examples:
              example-1:
                value:
                  name: newRole
      tags:
        - role
  '/roles/{role_id}':
    get:
      summary: Get detail of role
      tags:
        - role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples: {}
      operationId: getRole
      description: get detail of role
    parameters:
      - schema:
          type: string
        name: role_id
        in: path
        required: true
    patch:
      summary: Update role
      operationId: updateRole
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      description: Update role
      tags:
        - role
    delete:
      summary: Delete Role
      operationId: deleteRole
      responses:
        '200':
          description: OK
      description: Delete Role
      tags:
        - role
  /permissions:
    get:
      summary: Get list of permissions
      tags:
        - permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permisson'
                  total:
                    type: integer
      operationId: lsitPermissions
      description: Get list of permissions
      parameters:
        - $ref: '#/components/parameters/search'
  '/permissions/{permisson_id}':
    parameters:
      - schema:
          type: string
        name: permisson_id
        in: path
        required: true
    get:
      summary: Get permission
      tags:
        - permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permisson'
      operationId: getPermission
      description: Get Permission
components:
  schemas:
    Role:
      description: Model for role.
      type: object
      x-examples:
        example-1:
          role_id: '1'
          name: example
          db_permissions:
            - DBs:
                - db1
                - db2
              permissions:
                - read_public
                - write
          description: example permission
          users:
            - Tarou
            - Hanako
      title: RoleModel
      properties:
        description:
          type: string
        name:
          type: string
        role_id:
          type: string
        permissions:
          type: array
          items:
            type: object
            properties:
              databases:
                type: array
                items:
                  type: string
              permissions:
                type: array
                items:
                  $ref: '#/components/schemas/Permisson'
    User:
      title: User
      type: object
      description: Model for user
      x-examples:
        example-1:
          user_id: '1'
          name: Tarou
          roles:
            - admin
            - user
      properties:
        user_id:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Permisson:
      title: Permisson
      type: object
      description: Model for permisson.
      x-examples:
        example-1:
          permission_id: read_public
          name: read_public
      properties:
        permission_id:
          type: string
          description: ''
        name:
          type: string
  responses: {}
  parameters:
    per_page:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
      description: Number of results per page.
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
      description: Page index of the results to return.
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: Search keyword for name of records
tags:
  - name: permission
  - name: role
  - name: user
