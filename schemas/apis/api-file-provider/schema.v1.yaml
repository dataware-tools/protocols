openapi: 3.0.2
info:
  title: file provider
  version: '1.0'
  description: An API for downloading files
  contact:
    email: contact@hdwlab.co.jp
    name: Human Dataware Lab. Co. Ltd.
    url: 'http://www.hdwlab.co.jp/'
  license:
    name: Apache-2.0
servers:
  - url: 'http://localhost:8080'
paths:
  /file:
    get:
      operationId: downloadFile
      description: Return the content of the file
      parameters:
        - name: path
          description: File path
          in: query
          schema:
            type: string
          required: true
        - name: database_id
          description: Database ID (optional)
          in: query
          schema:
            type: string
        - name: record_id
          description: Record ID (optional)
          in: query
          schema:
            type: string
        - name: content_type
          description: 'MIME-Type. If given, this will be set to Content-type in the response header'
          in: query
          schema:
            type: string
      summary: Get file
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - download
    parameters: []
  /download:
    post:
      summary: Create JWT to download file
      operationId: createJwtToDownloadFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadsPostedModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      description: Create a JWT to download a file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadsPostModel'
      tags:
        - download
  '/download/{token}':
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
        description: JWT token
    get:
      summary: Download file
      tags:
        - download
      operationId: downloadFileByJwt
      description: Download a file
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
              examples:
                example-1:
                  value:
                    reason: Invalid signature
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
              examples:
                example-1:
                  value:
                    reason: No such file
  /upload:
    post:
      summary: Upload file
      operationId: uploadFile
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  save_file_path:
                    type: string
                additionalProperties: {}
        '409':
          description: A file with the same path already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
      description: Upload a file
      parameters:
        - schema:
            type: string
          in: query
          name: database_id
          required: true
          description: Database ID
        - schema:
            type: string
          in: query
          name: record_id
          required: true
          description: Record ID
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              format: binary
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload as binary data.
                metadata:
                  type: string
                  description: Metadata contents as JSON string.
                  format: binary
                  default: '{}'
              required:
                - file
  /delete:
    delete:
      summary: Delete file
      tags:
        - delete
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
      operationId: deleteFile
      description: Delete actual file.
      parameters:
        - schema:
            type: string
          in: query
          name: path
          description: File path
          required: true
        - schema:
            type: string
          in: query
          name: database_id
          description: Database ID
          required: true
components:
  schemas:
    DownloadsPostModel:
      title: DownloadsPostModel
      type: object
      description: Post request for creating a JWT to download a file
      x-examples:
        example-1:
          value:
            path: /opt/app/pyproject.toml
            database_id: sample_database_id
      properties:
        path:
          type: string
          description: Path to a file to download
        database_id:
          type: string
          description: Optional. Used for estimating content-type
        record_id:
          type: string
          description: Optional. Used for estimating content-type
        content_type:
          type: string
          description: 'If specified, Content-type in the response headers will contain this value'
      required:
        - path
        - database_id
    DownloadsPostedModel:
      title: DownloadsPostedModel
      type: object
      description: Response of DownloadsPost
      x-examples:
        example-1:
          token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJkYXRhYmFzZV9pZCI6bnVsbCwicmVjb3JkX2lkIjpudWxsLCJwYXRoIjoiL29wdC9hcHAvcHlwcm9qZWN0LnRvbWwiLCJjb250ZW50X3R5cGUiOm51bGwsImlzcyI6ImFwaS1maWxlLXByb3ZpZGVyIiwiaWF0IjoxNjA4NTIzOTY3LCJuYmYiOjE2MDg1MjM5NjcsImV4cCI6MTYwODUyNzU2N30.61YBRWCctkQnCMVNlKHspz3cw1-RKhtCF0EI35Fdwo0
      properties:
        token:
          type: string
      required:
        - token
    ErrorModel:
      title: ErrorModel
      type: object
      properties:
        reason:
          type: string
      required:
        - reason
      description: Error
      x-examples:
        example-1:
          reason: Invalid signature
tags:
  - name: download
  - name: upload
  - name: delete
