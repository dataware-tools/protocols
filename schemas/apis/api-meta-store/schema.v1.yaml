openapi: 3.0.2
info:
  title: meta store
  version: '1.0'
  description: APIs to manage metadata of data
  contact:
    email: contact@hdwlab.co.jp
    name: Human Dataware Lab. Co. Ltd.
    url: 'http://www.hdwlab.co.jp/'
  license:
    name: Apache-2.0
servers:
  - url: 'http://localhost:8080'
paths:
  '/databases/{database_id}/records/{record_id}':
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: record_id
        in: path
        required: true
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
    get:
      operationId: getRecord
      description: Return the detail of the record.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordModel'
              examples:
                example-1:
                  value:
                    description: Driving Database
                    database_id: Driving Behavior Database
                    record_id: '016_00000000030000000240'
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    content_type: text/csv
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      summary: Get record information
      tags:
        - record
    delete:
      summary: Delete record information
      operationId: deleteRecord
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecordResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      description: Delete a record
      tags:
        - record
      parameters: []
    patch:
      summary: Update record information
      operationId: updateRecord
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordModel'
              examples:
                example-1:
                  value:
                    description: Driving Database
                    database_id: Driving Behavior Database
                    record_id: '016_00000000030000000240'
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    content_type: text/csv
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      description: Update a record
      tags:
        - record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecordRequest'
            examples:
              example-1:
                value:
                  description: Driving Database
                  database_id: Driving Behavior Database
                  start_timestamp: 1489728491
                  end_timestamp: 1489728570.957
                  content_type: text/csv
                  contents:
                    camera/front-center:
                      tags:
                        - camera
                        - front
                        - center
                        - timestamps
      parameters: []
  '/databases/{database_id}/records':
    get:
      operationId: listRecords
      description: Return the list of records.
      parameters:
        - name: per_page
          description: Number of items to return per page
          in: query
          schema:
            type: integer
        - name: page
          description: Page number
          in: query
          schema:
            type: integer
        - name: sort_key
          description: Key to sort
          in: query
          schema:
            type: string
        - name: search
          description: Search keyword for name of records
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordResponse'
              examples:
                example-1:
                  value:
                    number_of_pages: 1
                    data:
                      - description: Driving Database
                        database_id: Driving Behavior Database
                        record_id: '016_00000000030000000240'
                        start_timestamp: 1489728491
                        end_timestamp: 1489728570.957
                        content_type: text/csv
                        contents:
                          camera/front-center:
                            tags:
                              - camera
                              - front
                              - center
                              - timestamps
                    per_page: 50
                    page: 1
                    sort_key: string
                    database_id: string
                    length: 1
                    total: 1
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      summary: List record information
      tags:
        - record
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
    post:
      summary: Create record information
      operationId: createRecord
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordModel'
              examples:
                example-1:
                  value:
                    description: Driving Database
                    database_id: Driving Behavior Database
                    record_id: '016_00000000030000000240'
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    content_type: text/csv
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Unprocessable Entity (WebDAV)
      description: Create a new record
      tags:
        - record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecordRequest'
            examples:
              example-1:
                value:
                  description: Driving Database
                  database_id: Driving Behavior Database
                  record_id: '016_00000000030000000240'
                  start_timestamp: 1489728491
                  end_timestamp: 1489728570.957
                  content_type: text/csv
                  contents:
                    camera/front-center:
                      tags:
                        - camera
                        - front
                        - center
                        - timestamps
      parameters: []
  '/databases/{database_id}':
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
    get:
      operationId: getDatabase
      description: Return information of the database.
      summary: Get database information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseModel'
              examples:
                example-1:
                  value:
                    database_id: default
                    name: default database
                    description: The default database
                    df_name: db_0ffc6dbe_meta
                    _uuid: c21f969b5f03d33d43e04f8f136e7682
                    _creation_time: 1619716430.642142
                    _id: 440f8ceea90e11ebb2be0242ac110004
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      tags:
        - database
    delete:
      summary: Delete database information
      operationId: deleteDatabase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatabaseResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      description: Delete a database
      tags:
        - database
    patch:
      summary: Update database information
      operationId: updateDatabase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseModel'
              examples:
                example-1:
                  value:
                    database_id: default
                    name: default database
                    description: The default database
                    df_name: db_0ffc6dbe_meta
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Unprocessable Entity (WebDAV)
      description: Update a database
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest'
            examples:
              example-1:
                value:
                  name: default database
                  description: The default database
                  df_name: db_0ffc6dbe_meta
  /databases:
    get:
      operationId: listDatabases
      description: Return the list of databases.
      parameters:
        - name: per_page
          description: Number of items to return per page
          in: query
          schema:
            type: integer
        - name: page
          description: Page number
          in: query
          schema:
            type: integer
        - name: sort_key
          description: Key to sort
          in: query
          schema:
            type: string
        - name: search
          description: Search keyword for name of databases
          in: query
          schema:
            type: string
      summary: List databases
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabaseResponse'
              examples:
                example-1:
                  value:
                    per_page: 50
                    page: 1
                    sort_key: null
                    data:
                      - database_id: default
                        df_name: db_0ffc6dbe_meta
                        _uuid: c21f969b5f03d33d43e04f8f136e7682
                        _creation_time: 1619716430.642142
                        _id: 440f8ceea90e11ebb2be0242ac110004
                    number_of_pages: 1
                    length: 1
                    total: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      tags:
        - database
    parameters: []
    post:
      summary: Create database information
      operationId: createDatabase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseModel'
              examples:
                example-1:
                  value:
                    database_id: default
                    name: default database
                    description: The default database
                    df_name: db_0ffc6dbe_meta
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Unprocessable Entity (WebDAV)
      description: Create a new database
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
            examples:
              example-1:
                value:
                  database_id: default
                  name: default database
                  description: The default database
                  df_name: db_0ffc6dbe_meta
  '/databases/{database_id}/files':
    get:
      summary: List files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileResponse'
              examples:
                example-1:
                  value:
                    number_of_pages: 0
                    per_page: 0
                    page: 0
                    sort_key: string
                    database_id: string
                    record_id: string
                    data:
                      - type: raw_data
                        path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
                        content-type: text/csv
                        start_timestamp: 1489728491
                        end_timestamp: 1489728570.957
                        uuid: 298joidfjp9ifasdifaj3ap9asdfao
                        contents:
                          camera/front-center:
                            tags:
                              - camera
                              - front
                              - center
                              - timestamps
                    length: 1
                    total: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      operationId: listFiles
      description: List files
      parameters:
        - name: per_page
          description: Number of items to return per page
          in: query
          schema:
            type: integer
        - name: page
          description: Page number
          in: query
          schema:
            type: integer
        - name: sort_key
          description: Key to sort
          in: query
          schema:
            type: string
        - name: search
          description: Search keyword for name of records
          in: query
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: record_id
          description: Record id
      tags:
        - file
    post:
      summary: Create file information
      operationId: createFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
              examples:
                example-1:
                  value:
                    type: raw_data
                    path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
                    content-type: text/csv
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    uuid: fq9ewudiajfliuaepwoifajkldsfieoa
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
      description: Register new metadata of a file
      tags:
        - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileRequest'
            examples:
              example-1:
                value:
                  type: raw_data
                  path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
                  content-type: text/csv
                  start_timestamp: 1489728491
                  end_timestamp: 1489728570.957
                  contents:
                    camera/front-center:
                      tags:
                        - camera
                        - front
                        - center
                        - timestamps
      parameters: []
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
  '/databases/{database_id}/files/{uuid}':
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9]+'
          minLength: 1
        name: uuid
        in: path
        required: true
    get:
      summary: Get file information
      tags:
        - file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
              examples:
                example-1:
                  value:
                    type: raw_data
                    path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
                    content-type: text/csv
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    uuid: a9w8ruohaiwfhaoiu3haldisufa3
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
      operationId: getFile
      description: Get file information
      parameters: []
    delete:
      summary: Delete file information
      operationId: deleteFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFileResponse'
      description: Delete file information
      tags:
        - file
      parameters: []
    patch:
      summary: Update file information
      operationId: updateFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
              examples:
                example-1:
                  value:
                    type: raw_data
                    path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
                    content-type: text/csv
                    start_timestamp: 1489728491
                    end_timestamp: 1489728570.957
                    uuid: qfp928ejasdifjapoiefjaldkfa3
                    contents:
                      camera/front-center:
                        tags:
                          - camera
                          - front
                          - center
                          - timestamps
      description: Update information of a file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileRequest'
            examples:
              example-1:
                value:
                  type: raw_data
                  content-type: text/csv
                  start_timestamp: 1489728491
                  end_timestamp: 1489728570.957
                  contents:
                    camera/front-center:
                      tags:
                        - camera
                        - front
                        - center
                        - timestamps
      tags:
        - file
      parameters: []
  '/databases/{database_id}/config':
    parameters:
      - schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name: database_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
              examples:
                example-1:
                  value:
                    columns:
                      - name: description
                        dtype: string
                        aggregation: first
                        display_name: Description
                      - name: record_id
                        dtype: string
                        aggregation: first
                        display_name: Record ID
                      - name: path
                        dtype: string
                        aggregation: push
                        display_name: File path
                      - name: contents
                        dtype: string
                        aggregation: mergeObjects
                        display_name: Contents
                      - name: tags
                        dtype: 'string[]'
                        aggregation: addToSet
                        display_name: Tags
                      - name: name
                        dtype: str
                        aggregation: first
                        display_name: name
                      - name: list
                        dtype: list
                        aggregation: first
                        display_name: list
                    index_columns:
                      - record_id
                      - path
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      operationId: getConfig
      description: Get config for the database
    patch:
      summary: ''
      operationId: updateConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
              examples:
                example-1:
                  value:
                    columns:
                      - name: description
                        dtype: string
                        aggregation: first
                        display_name: Description
                      - name: record_id
                        dtype: string
                        aggregation: first
                        display_name: Record ID
                      - name: path
                        dtype: string
                        aggregation: push
                        display_name: File path
                      - name: contents
                        dtype: string
                        aggregation: mergeObjects
                        display_name: Contents
                      - name: tags
                        dtype: 'string[]'
                        aggregation: addToSet
                        display_name: Tags
                      - name: name
                        dtype: str
                        aggregation: first
                        display_name: name
                      - name: list
                        dtype: list
                        aggregation: first
                        display_name: list
                    index_columns:
                      - record_id
                      - path
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      description: Update config for the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
            examples:
              example-1:
                value:
                  columns:
                    - name: description
                      dtype: string
                      aggregation: first
                      display_name: Description
                    - name: record_id
                      dtype: string
                      aggregation: first
                      display_name: Record ID
                    - name: path
                      dtype: string
                      aggregation: push
                      display_name: File path
                    - name: contents
                      dtype: string
                      aggregation: mergeObjects
                      display_name: Contents
                    - name: tags
                      dtype: 'string[]'
                      aggregation: addToSet
                      display_name: Tags
                    - name: name
                      dtype: str
                      aggregation: first
                      display_name: name
                    - name: list
                      dtype: list
                      aggregation: first
                      display_name: list
                  index_columns:
                    - record_id
                    - path
      tags:
        - config
components:
  schemas:
    RecordModel:
      type: object
      description: ''
      x-examples:
        example-1:
          description: Driving Database
          database_id: Driving Behavior Database
          record_id: '016_00000000030000000240'
          start_timestamp: 1489728491
          end_timestamp: 1489728570.957
          content_type: text/csv
          contents:
            camera/front-center:
              tags:
                - camera
                - front
                - center
                - timestamps
      title: ''
      additionalProperties: {}
      properties:
        description:
          type: string
        record_id:
          type: string
          minLength: 1
        data_type:
          type: string
        start_timestamp:
          type: number
        end_timestamp:
          type: number
        content_type:
          type: string
        contents:
          type: object
      required:
        - record_id
    CreateRecordRequest:
      description: ''
      type: object
      x-examples:
        example-1:
          description: Driving Database
          record_id: '016_00000000030000000240'
      title: CreateRecordRequest
      properties:
        record_id:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        description:
          type: string
      additionalProperties: {}
      required:
        - record_id
    UpdateRecordRequest:
      description: ''
      type: object
      x-examples:
        example-1:
          description: Driving Database
      title: UpdateRecordRequest
      properties:
        description:
          type: string
    ListRecordResponse:
      title: RecordListModel
      type: object
      x-examples:
        example-1:
          count: 1
          per_page: 50
          number_of_pages: 1
          page: 1
          sort_key: null
          database_id: default
          data:
            - description: Driving Database
              database_id: Driving Behavior Database
              record_id: '016_00000000030000000240'
              data_type: raw_data
              path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
              start_timestamp: 1489728491
              end_timestamp: 1489728570.957
              content_type: text/csv
              contents:
                camera/front-center:
                  tags:
                    - camera
                    - front
                    - center
                    - timestamps
              _uuid: 604a772a56fff3c02c5dd159eb20c305
              _creation_time: 1619716430.061631
              _id: 43d6c986a90e11ebb2be0242ac110004
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecordModel'
        per_page:
          type: integer
        page:
          type: integer
        sort_key:
          type: string
          nullable: true
        database_id:
          type: string
        length:
          type: integer
        total:
          type: integer
      required:
        - data
        - per_page
        - page
        - sort_key
        - database_id
        - length
        - total
    ListFileResponse:
      title: FileListModel
      type: object
      x-examples:
        example-1:
          database_id: default
          record_id: '016_00000000030000000240'
          files:
            - path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
              type: raw_data
              content-type: text/csv
              start_timestamp: 1489728491
              end_timestamp: 1489728570.957
              contents:
                camera/front-center:
                  tags:
                    - camera
                    - front
                    - center
                    - timestamps
      properties:
        per_page:
          type: integer
        page:
          type: integer
        sort_key:
          type: string
          nullable: true
        database_id:
          type: string
        record_id:
          type: string
        data:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/FileModel'
        length:
          type: integer
        total:
          type: integer
      required:
        - per_page
        - page
        - sort_key
        - database_id
        - record_id
        - data
        - length
        - total
    ListDatabaseResponse:
      type: object
      title: DatabaseListModel
      x-examples:
        example-1:
          value:
            count: 0
            number_of_pages: 0
            data:
              - database_id: string
                name: string
                description: string
            page: 0
            per_page: 0
            sort_key: string
            length: 0
            total: 0
      properties:
        number_of_pages:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseModel'
        page:
          type: integer
        per_page:
          type: integer
        sort_key:
          type: string
          nullable: true
        length:
          type: integer
        total:
          type: integer
      required:
        - number_of_pages
        - data
        - page
        - per_page
        - sort_key
        - length
        - total
    DatabaseModel:
      title: DatabaseModel
      type: object
      x-examples:
        example-1:
          database_id: default
          name: default database
          description: The default database
          df_name: db_0ffc6dbe_meta
          _uuid: c21f969b5f03d33d43e04f8f136e7682
          _creation_time: 1619716430.642142
          _id: 440f8ceea90e11ebb2be0242ac110004
      properties:
        database_id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - database_id
    CreateDatabaseRequest:
      title: CreateDatabaseRequest
      type: object
      x-examples:
        example-1:
          database_id: default
          name: default database
          description: The default database
      properties:
        database_id:
          type: string
          pattern: '^[a-zA-Z0-9_-]+'
          minLength: 1
        name:
          type: string
        description:
          type: string
      required:
        - database_id
    UpdateDatabaseRequest:
      title: UpdateDatabaseRequest
      type: object
      x-examples:
        example-1:
          name: default database
          description: The default database
      properties:
        name:
          type: string
        description:
          type: string
    FileModel:
      description: ''
      type: object
      x-examples:
        example-1:
          type: raw_data
          path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
          content-type: text/csv
          start_timestamp: 1489728491
          end_timestamp: 1489728570.957
          contents:
            camera/front-center:
              tags:
                - camera
                - front
                - center
                - timestamps
      title: FileModel
      properties:
        type:
          type: string
        content-type:
          type: string
        start_timestamp:
          type: number
        end_timestamp:
          type: number
        contents:
          type: object
        path:
          type: string
        uuid:
          type: string
      additionalProperties: {}
      required:
        - path
        - uuid
    UpdateFileRequest:
      description: ''
      type: object
      x-examples:
        example-1:
          path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
          type: raw_data
          content-type: text/csv
          start_timestamp: 1489728491
          end_timestamp: 1489728570.957
          contents:
            camera/front-center:
              tags:
                - camera
                - front
                - center
                - timestamps
      title: FileModel
      properties:
        type:
          type: string
        content-type:
          type: string
        start_timestamp:
          type: number
        end_timestamp:
          type: number
        contents:
          type: object
      additionalProperties: {}
    CreateFileRequest:
      description: ''
      type: object
      x-examples:
        example-1:
          path: /records/016_00000000030000000240/data/camera_01_timestamps.csv
          type: raw_data
          content-type: text/csv
          start_timestamp: 1489728491
          end_timestamp: 1489728570.957
          contents:
            camera/front-center:
              tags:
                - camera
                - front
                - center
                - timestamps
      title: CreateFileRequest
      properties:
        path:
          type: string
          pattern: '^[a-zA-Z0-9:;.,_=<>/~!@#$%^&()+-]+'
          minLength: 0
        contents:
          type: object
      additionalProperties: {}
      required:
        - path
    DeleteDatabaseResponse:
      title: DeleteDatabaseResponse
      type: object
      properties:
        database_id:
          type: string
      required:
        - database_id
    DeleteRecordResponse:
      title: DeleteRecordResponse
      type: object
      properties:
        database_id:
          type: string
        record_id:
          type: string
      required:
        - database_id
        - record_id
    DeleteFileResponse:
      title: DeleteFileResponse
      type: object
      properties:
        database_id:
          type: string
        uuid:
          type: string
      required:
        - database_id
        - uuid
    ConfigModel:
      description: ''
      type: object
      x-examples:
        example-1:
          columns:
            - name: description
              dtype: string
              aggregation: first
              display_name: Description
            - name: record_id
              dtype: string
              aggregation: first
              display_name: Record ID
            - name: path
              dtype: string
              aggregation: push
              display_name: File path
            - name: contents
              dtype: string
              aggregation: mergeObjects
              display_name: Contents
            - name: tags
              dtype: 'string[]'
              aggregation: addToSet
              display_name: Tags
            - name: name
              dtype: str
              aggregation: first
              display_name: name
            - name: list
              dtype: list
              aggregation: first
              display_name: list
          index_columns:
            - record_id
            - path
          value:
            columns:
              - name: description
                dtype: string
                aggregation: first
                display_name: Description
              - name: record_id
                dtype: string
                aggregation: first
                display_name: Record ID
              - name: path
                dtype: string
                aggregation: push
                display_name: File path
              - name: contents
                dtype: string
                aggregation: mergeObjects
                display_name: Contents
              - name: tags
                dtype: 'string[]'
                aggregation: addToSet
                display_name: Tags
              - name: name
                dtype: str
                aggregation: first
                display_name: name
              - name: list
                dtype: list
                aggregation: first
                display_name: list
            index_columns:
              - record_id
              - path
      properties:
        columns:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              dtype:
                type: string
                minLength: 1
              aggregation:
                type: string
                minLength: 1
              display_name:
                type: string
                minLength: 1
            required:
              - name
              - dtype
              - aggregation
        index_columns:
          type: array
          items:
            type: string
      additionalProperties: {}
      required:
        - columns
        - index_columns
    UpdateConfigRequest:
      description: ''
      type: object
      x-examples:
        example-1:
          columns:
            - name: description
              dtype: string
              aggregation: first
              display_name: Description
            - name: record_id
              dtype: string
              aggregation: first
              display_name: Record ID
            - name: path
              dtype: string
              aggregation: push
              display_name: File path
            - name: contents
              dtype: string
              aggregation: mergeObjects
              display_name: Contents
            - name: tags
              dtype: 'string[]'
              aggregation: addToSet
              display_name: Tags
            - name: name
              dtype: str
              aggregation: first
              display_name: name
            - name: list
              dtype: list
              aggregation: first
              display_name: list
          index_columns:
            - record_id
            - path
          value:
            columns:
              - name: description
                dtype: string
                aggregation: first
                display_name: Description
              - name: record_id
                dtype: string
                aggregation: first
                display_name: Record ID
              - name: path
                dtype: string
                aggregation: push
                display_name: File path
              - name: contents
                dtype: string
                aggregation: mergeObjects
                display_name: Contents
              - name: tags
                dtype: 'string[]'
                aggregation: addToSet
                display_name: Tags
              - name: name
                dtype: str
                aggregation: first
                display_name: name
              - name: list
                dtype: list
                aggregation: first
                display_name: list
            index_columns:
              - record_id
              - path
      properties:
        columns:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              dtype:
                type: string
                minLength: 1
              aggregation:
                type: string
                minLength: 1
              display_name:
                type: string
                minLength: 1
            required:
              - name
              - dtype
              - aggregation
        index_columns:
          type: array
          items:
            type: string
      additionalProperties: {}
      required:
        - columns
        - index_columns
    ErrorModel:
      title: ErrorModel
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
tags:
  - name: config
  - name: database
  - name: file
  - name: record
